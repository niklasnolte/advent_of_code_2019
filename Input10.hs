module Input10 where

data Map = Map {
  _repr :: String,
  _width :: Int
} deriving (Show)


{-test_input = Map ".#..#.....#####....#...##" 5-}
{-test_input= Map "......#.#.#..#.#......#######..#.#.###...#..#.......#....#.##..#....#..##.#..#####...#..#..#....####" 10-}
test_input = Map ".#..##.###...#########.############..##..#.######.########.#.###.#######.####.#.#####.##.#.##.###.##..#####..#.##############################.####....###.#.#.####.######################.##.###..####....######..##.###########.##.####...##..#.#####..#.######.#####...#.##########...#.##########.#######.####.#.###.###.#.##....##.##.###..#####.#.#.###########.####.#.#.#####.####.######.##.####.##.#..##" 20
real_input = Map".#......#...#.....#..#......#..##..#..#.......#..........#..##.##.......##......#.#..#..#..##...#.##.###......#........#...........#.......##....##.....#.......#........#..#.#......#...#...#.....#.##.......#...#....##...#..##....#....#......#..............#......#.#.....#..#...#......#........###.......#..........#.##.#...#......#..#.....#..#......#..#..####.##...##......##..#####.......##.........#...#.........#........#....#......##.....#...#........#.##..#....#....#........#.###.#........#...#..#....#..#.#.##....#.........#.....#.###....###....##..#..#........#...........#.#.........#.......#....#....#.###.....#....#.#......#...##.##.......##...##....##.........#...#...........#....##....#..#.#.#...##.#...#.#...#.#.#.#..##.#...#..#..#..#............#...#...#.#.....#.#.....#.####..........#..................#.#.##.....#....#....#...#..#....#.....#....#####..####........#...............#....#.#..#..#....##......#...#........####....#..#......#.#...##.....#...##....#.###.##.#.##.#.....#......#....#.####...#......###.....##.......#.....#....#......#..#..#.#..#.......#.......#...#........#.##...#.....#.....####.#..........#.#.......#.....##..#..#.....#.#.........#..#.#.##.........#..........##.#.##.......###..#.....#....#....#.#.......####..#..............#.#...........##.#.#.." 36

asteroid_sign = '#'
empty_sign = '.'
